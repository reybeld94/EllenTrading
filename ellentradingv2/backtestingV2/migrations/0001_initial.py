# Generated by Django 5.1.5 on 2025-06-14 03:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('strategies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalMarketDataPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeframe', models.CharField(choices=[('1m', '1 Minute'), ('5m', '5 Minutes'), ('15m', '15 Minutes'), ('30m', '30 Minutes'), ('1h', '1 Hour'), ('4h', '4 Hours'), ('1d', '1 Day'), ('1w', '1 Week'), ('1mo', '1 Month')], default='1m', max_length=5)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('normalized_volume', models.FloatField(blank=True, null=True)),
                ('vwap', models.FloatField(blank=True, null=True)),
                ('trade_count', models.IntegerField(blank=True, null=True)),
                ('exchange', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('source', models.CharField(default='alpaca_ws', max_length=50)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.symbol')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalLiveTechnicalIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sma_9', models.FloatField(null=True)),
                ('sma_10', models.FloatField(null=True)),
                ('sma_20', models.FloatField(null=True)),
                ('sma_21', models.FloatField(null=True)),
                ('sma_50', models.FloatField(null=True)),
                ('sma_55', models.FloatField(null=True)),
                ('sma_100', models.FloatField(null=True)),
                ('sma_200', models.FloatField(null=True)),
                ('ema_9', models.FloatField(null=True)),
                ('ema_12', models.FloatField(null=True)),
                ('ema_20', models.FloatField(null=True)),
                ('ema_21', models.FloatField(null=True)),
                ('ema_26', models.FloatField(null=True)),
                ('ema_50', models.FloatField(null=True)),
                ('ema_55', models.FloatField(null=True)),
                ('ema_100', models.FloatField(null=True)),
                ('ema_200', models.FloatField(null=True)),
                ('wma_10', models.FloatField(null=True)),
                ('macd', models.FloatField(null=True)),
                ('macd_signal', models.FloatField(null=True)),
                ('macd_hist', models.FloatField(null=True)),
                ('adx', models.FloatField(null=True)),
                ('plus_di', models.FloatField(null=True)),
                ('minus_di', models.FloatField(null=True)),
                ('ichimoku_tenkan', models.FloatField(null=True)),
                ('ichimoku_kijun', models.FloatField(null=True)),
                ('ichimoku_span_a', models.FloatField(null=True)),
                ('ichimoku_span_b', models.FloatField(null=True)),
                ('ichimoku_chikou', models.FloatField(null=True)),
                ('parabolic_sar', models.FloatField(null=True)),
                ('supertrend', models.FloatField(null=True)),
                ('rsi_14', models.FloatField(null=True)),
                ('stochastic_k', models.FloatField(null=True)),
                ('stochastic_d', models.FloatField(null=True)),
                ('cci_20', models.FloatField(null=True)),
                ('roc', models.FloatField(null=True)),
                ('williams_r', models.FloatField(null=True)),
                ('momentum_10', models.FloatField(null=True)),
                ('atr_14', models.FloatField(null=True)),
                ('bollinger_upper', models.FloatField(null=True)),
                ('bollinger_middle', models.FloatField(null=True)),
                ('bollinger_lower', models.FloatField(null=True)),
                ('donchian_upper', models.FloatField(null=True)),
                ('donchian_lower', models.FloatField(null=True)),
                ('keltner_upper', models.FloatField(null=True)),
                ('keltner_lower', models.FloatField(null=True)),
                ('chaikin_volatility', models.FloatField(null=True)),
                ('obv', models.FloatField(null=True)),
                ('ad_line', models.FloatField(null=True)),
                ('chaikin_oscillator', models.FloatField(null=True)),
                ('mfi', models.FloatField(null=True)),
                ('volume_sma_20', models.FloatField(null=True)),
                ('normalized_volume', models.FloatField(null=True)),
                ('vwap', models.FloatField(null=True)),
                ('slope', models.FloatField(null=True)),
                ('heikin_ashi_close', models.FloatField(null=True)),
                ('bullish_engulfing', models.FloatField(null=True)),
                ('bearish_engulfing', models.FloatField(null=True)),
                ('hammer', models.FloatField(null=True)),
                ('shooting_star', models.FloatField(null=True)),
                ('doji', models.FloatField(null=True)),
                ('morning_star', models.FloatField(null=True)),
                ('evening_star', models.FloatField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('market_data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='backtestingV2.historicalmarketdatapoint')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('watch', 'Watch')], max_length=20)),
                ('price', models.FloatField()),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(default='alpaca_websocket', max_length=50)),
                ('executed', models.BooleanField(default=False)),
                ('timeframe', models.CharField(choices=[('1m', '1 Minute'), ('5m', '5 Minutes'), ('15m', '15 Minutes'), ('1h', '1 Hour'), ('1d', '1 Day')], default='1m', max_length=5)),
                ('confidence_score', models.IntegerField(blank=True, null=True)),
                ('indicators', models.JSONField(blank=True, null=True)),
                ('strategy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='strategies.openstrategy')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.symbol')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=4)),
                ('quantity', models.IntegerField(default=0)),
                ('filled_quantity', models.IntegerField(default=0)),
                ('notional', models.FloatField(blank=True, null=True)),
                ('filled_notional', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField()),
                ('exit_price', models.FloatField(blank=True, null=True)),
                ('pnl', models.FloatField(blank=True, null=True)),
                ('take_profit', models.FloatField(blank=True, null=True)),
                ('stop_loss', models.FloatField(blank=True, null=True)),
                ('trailing_stop', models.FloatField(blank=True, null=True)),
                ('trailing_level', models.FloatField(blank=True, null=True)),
                ('highest_price', models.FloatField(blank=True, null=True)),
                ('order_type', models.CharField(choices=[('market', 'Market'), ('limit', 'Limit'), ('stop', 'Stop'), ('stop_limit', 'Stop Limit')], default='market', max_length=20)),
                ('time_in_force', models.CharField(choices=[('day', 'Day'), ('gtc', 'GTC'), ('opg', 'Open'), ('cls', 'Close'), ('ioc', 'IOC'), ('fok', 'FOK')], default='day', max_length=10)),
                ('execution_mode', models.CharField(choices=[('simulated', 'Simulated'), ('paper', 'Paper'), ('live', 'Live')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('executed', 'Executed'), ('closed', 'Closed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='executed', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('filled_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('confidence_score', models.IntegerField()),
                ('strategy', models.CharField(blank=True, max_length=100, null=True)),
                ('fees', models.FloatField(blank=True, null=True)),
                ('commission', models.FloatField(blank=True, null=True)),
                ('slippage', models.FloatField(blank=True, null=True)),
                ('max_drawdown', models.FloatField(default=0)),
                ('min_price_seen', models.FloatField(blank=True, null=True)),
                ('max_price_seen', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('broker_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.symbol')),
            ],
        ),
    ]
